@Dal_1 = [@aDal.fina @aDal.fina_BaaDal @aDal.fina_KafDal @aDal.fina_LamDal @aDal.isol];
@1st_4 = [@aHeh.isol @aHeh.fina @aHeh.fina_KafHeh @aHeh.fina_LamHeh];
# final alef with no hamza above
@Alf_1 = [alef-ar.fina_LamAlfFina alefHamzabelow-ar.fina_LamAlfFina];
@Alf_2 = [@aAlf.fina @aAlf.fina_KafAlf @aAlf.fina_KafMemAlf @aAlf.fina_LamAlfFina @aAlf.fina_LamAlfIsol @aAlf.fina_MemAlfFina];
@Kaf_1 = [@aKaf.init_KafHeh @aKaf.init_KafMemIsol];
@Kaf_2 = [@aKaf.init_KafBaaInit @aKaf.init_KafMemAlf];
@Kaf_3 = [@aKaf.init @aKaf.init_KafLam @aKaf.init_PreHeh @aGaf.isol];
@Kaf_4 = [@aKaf.init_KafYaaIsol];
@Kaf_5 = [@aKaf.init_KafMemInit @aKaf.init_KafRaaIsol];
@Raa_1 = [@RaaWaw @aDal.fina @aDal.isol @aDal.fina_BaaDal @aDal.fina_KafDal @aDal.fina_LamDal];
@Raa_2 = [@aRaa.fina_MemRaaIsol];
@2nd_3 = [@aSen.init_SenHaaInit @aSad.init_SadHaaInit @aLam.init_LamHaaHaaInit];
@2nd_4 = [@aSad.init_AboveHaa @aSen.init_AboveHaa @aHeh.init_AboveHaa @aHaa.init_AboveHaa @aMem.init_AboveHaa @aKaf.init_AboveHaa @aAyn.init_AboveHaa];
@Teh_m = [tehMarbuta-ar.fina_LamHeh tehMarbuta-ar.fina_KafHeh tehMarbutagoal-ar.fina_LamHeh tehMarbutagoal-ar.fina_KafHeh];
# teh marbuta
feature kern {
    # we don't want to kern those if there is tashkil as it touches the kaf
    pos @RaaWaw @Kaf_1 <-293 0 -293 0>;
    pos @RaaWaw @Kaf_4 <-146 0 -146 0>;
    pos @Dal_1 @Kaf_1 <-293 0 -293 0>;
    pos @Dal_1 @Kaf_4 <-195 0 -195 0>;
} kern;

feature kern {
    lookupflag IgnoreMarks;
    pos @RaaWaw @Kaf_5 <-293 0 -293 0>;
    pos @RaaWaw [@Kaf_2 @Kaf_3] <-146 0 -146 0>;
    pos @RaaWaw @2nd_3 <-49 0 -49 0>;
    pos @RaaWaw @aYaa.init <39 0 39 0>;
    pos @RaaWaw semicolon-ar <59 0 59 0>;
    # Arabic semicolon
    pos @Dal_1 @Kaf_5 <-293 0 -293 0>;
    pos @Dal_1 [@Kaf_2 @Kaf_3] <-195 0 -195 0>;
    pos @Raa_2 [@Kaf_2 @Kaf_3 @Kaf_4] <-195 0 -195 0>;
    pos @Raa_2 [@Kaf_1 @Kaf_5] <-391 0 -391 0>;
    pos @Raa_2 @2nd_3 <-98 0 -98 0>;
    pos @Raa_2 @2nd_4 <-195 0 -195 0>;
    pos @Raa_2 @aBaaDotBelow <88 0 88 0>;
    # the dots of teh marbuta are very close to exclamation mark
    pos @Teh_m exclam <73 0 73 0>;
} kern;

lookup YaaBari3Kern {
    pos @aAyn.init <0 0 215 0>;
    pos @aFaa.init <0 0 347 0>;
    pos @aHeh.init <0 0 195 0>;
    pos @aLam.init <0 0 466 0>;
    pos @aMem.init <0 0 254 0>;
    pos @aSen.init <0 0 73 0>;
    pos @aTaa.init <0 0 73 0>;
    pos hehDoachashmee-ar.init <0 0 195 0>;
} YaaBari3Kern;

feature kern {
    lookupflag IgnoreMarks;
    # +ve kern so that the tail of raa/waw does not touch the dot of baa
    pos [@RaaWaw @AlefHamzaBelow] @aBaaDotBelow <83 0 83 0>;
    # increase advance width for first glyph in 3-letter Baree Yaa ligatures
    pos [@aAyn.init @aFaa.init @aHeh.init @aLam.init @aMem.init @aSen.init @aTaa.init hehDoachashmee-ar.init]' lookup YaaBari3Kern @aBaa.medi_YaaBari;
} kern;

# we don't want to ignore marks here
feature kern {
    pos @Alf_1 [@Kaf_1 @Kaf_5] <-244 0 -244 0>;
    pos @Alf_1 @Kaf_2 <-98 0 -98 0>;
    pos @Alf_1 @Kaf_3 <-122 0 -122 0>;
    pos @Alf_1 @Kaf_4 <-146 0 -146 0>;
    # raa/waw/dal followed by isolated dagger alef followed by madda needs some
    # space to avoid fatha/madda clash
    pos @Raa_1' <98 0 98 0> fatha-ar alefabove-ar.isol [madda-ar maddalong-ar];
    pos [hamza-ar]' <98 0 98 0> fatha-ar alefabove-ar.isol;
} kern;

feature kern {
    lookupflag IgnoreMarks;
    # kern heh isol/final followed by kaf, does not happen in Arabic but can be
    # seen in Kurdish or Persian using ZWNJ between them.
    pos @1st_4 zerowidthnonjoiner [@Kaf_1 @Kaf_2 @Kaf_3 @Kaf_4 @Kaf_5]' -244;
    # Uniscribe replace ZWNJ with space
    pos @1st_4 space [@Kaf_1 @Kaf_2 @Kaf_3 @Kaf_4 @Kaf_5]' -244;
    # some applications might just remove it
    pos @1st_4 [@Kaf_1 @Kaf_2 @Kaf_3 @Kaf_4 @Kaf_5]' -244;
} kern;

#ifndef QURAN
feature kern {
    lookupflag IgnoreMarks;
    pos period [quotedblleft quoteleft] <-146 0 -146 0>;
    pos period.latn [quotedblright quoteright] -73;
} kern;

#endif
#ifdef ITALIC
feature kern {
    lookupflag IgnoreMarks;
    pos @Alf_2 [parenleft bracketleft braceleft] <146 0 146 0>;
    pos [parenright bracketright braceright] [@Kaf_1 @Kaf_2 @Kaf_4 @Kaf_5] <-49 0 -49 0>;
    pos [parenright bracketright braceright] [@Kaf_3] <-98 0 -98 0>;
    pos [braceright] [@Kaf_1 @Kaf_2 @Kaf_4 @Kaf_5] <-98 0 -98 0>;
    pos [braceright] [@Kaf_3] <-146 0 -146 0>;
} kern;

#endif
# proportional digits
feature kern {
    pos one-ar.prop two-ar.prop -49;
    pos one-ar.prop three-ar.prop -49;
    pos one-ar.prop six-ar.prop -98;
    pos one-ar.prop nine-ar.prop -49;
    pos two-ar.prop seven-ar.prop 49;
    pos two-ar.prop eight-ar.prop -24;
    pos three-ar.prop seven-ar.prop 49;
    pos four-ar.prop one-ar.prop -24;
    pos four-ar.prop eight-ar.prop 24;
    pos six-ar.prop one-ar.prop -24;
    pos seven-ar.prop one-ar.prop -24;
    pos seven-ar.prop eight-ar.prop -24;
    pos eight-ar.prop one-ar.prop -49;
    pos eight-ar.prop two-ar.prop -49;
    pos eight-ar.prop three-ar.prop -49;
    pos eight-ar.prop six-ar.prop -49;
    pos eight-ar.prop seven-ar.prop -49;
    pos nine-ar.prop eight-ar.prop 24;
    pos nine-ar.prop zero-ar.prop 24;
    pos zero-ar.prop seven-ar.prop 24;
    pos zero-ar.prop eight-ar.prop 24;
} kern;

# generated features for anchor points will be inserted here by build script
#{%anchors%}
# With ss05 on, kasra is below shadda, so move the shadda up a bit to
# compensate for the kasra.
feature ss05 {
    pos shadda-ar [kasra-ar.small] <0 103 0 0>;
    pos shadda-ar [kasratan-ar.small] <0 171 0 0>;
} ss05;
